version: '3.7'
x-common-environment: &common-environment
  RABBITMQ_URL: amqp://rabbitmq:5672
  LOG_LEVEL:
services:
  proxy:
    image: blockchain-proxy
    build:
      dockerfile: proxy/Dockerfile
      context: .
    environment:
      <<: *common-environment
      HOME_RPC_URL:
      HOME_BRIDGE_ADDRESS:
      HOME_TOKEN_ADDRESS:
      SIDE_RPC_URL:
      SIDE_SHARED_DB_ADDRESS:
      VALIDATOR_PRIVATE_KEY:
      FOREIGN_URL:
      FOREIGN_ASSET:
    ports:
      - '${VOTES_PROXY_PORT}:8002'
    networks:
      - oracle_network
  keygen-client:
    image: keygen-client
    build:
      dockerfile: tss-keygen/Dockerfile
      context: .
    environment:
      <<: *common-environment
      PROXY_URL: http://proxy:8001
      KEYGEN_ATTEMPT_TIMEOUT:
      KEYGEN_EPOCH_CHECK_INTERVAL:
    volumes:
      - '${PWD}/${TARGET_NETWORK}/keys:/keys'
    ports:
      - '${KEYGEN_RESTART_PORT}:8001'
    networks:
      - oracle_network
  sign-client:
    image: sign-client
    build:
      dockerfile: tss-sign/Dockerfile
      context: .
    environment:
      <<: *common-environment
      PROXY_URL: http://proxy:8001
      FOREIGN_CHAIN_ID:
      FOREIGN_URL:
      FOREIGN_ASSET:
      SIGN_ATTEMPT_TIMEOUT:
      SIGN_NONCE_CHECK_INTERVAL:
      SEND_TIMEOUT:
    volumes:
      - '${PWD}/${TARGET_NETWORK}/keys:/keys'
    ports:
      - '${SIGN_RESTART_PORT}:8001'
    networks:
      - oracle_network
  redis:
    image: redis
    build:
      dockerfile: redis/Dockerfile
      context: .
    volumes:
      - '${PWD}/${TARGET_NETWORK}/db:/data'
    networks:
      - oracle_network
  rabbitmq:
    hostname: rabbit
    image: rabbitmq:3.7.15-alpine
    environment:
      RABBITMQ_LOGS: 'false'
    volumes:
      - '${PWD}/${TARGET_NETWORK}/queue:/var/lib/rabbitmq/mnesia'
    networks:
      - oracle_network
  home-watcher:
    build:
      dockerfile: homeWatcher/Dockerfile
      context: .
    image: home-watcher
    environment:
      <<: *common-environment
      KEYGEN_CLIENT_URL: http://keygen-client:8001
      SIGN_CLIENT_URL: http://sign-client:8001
      SIDE_SENDER_URL: http://side-sender:8001
      REDIS_HOST: redis
      HOME_RPC_URL:
      HOME_BRIDGE_ADDRESS:
      HOME_TOKEN_ADDRESS:
      HOME_START_BLOCK:
      VALIDATOR_PRIVATE_KEY:
      HOME_MAX_FETCH_RANGE_SIZE:
    networks:
      - oracle_network
  bnc-watcher:
    build:
      dockerfile: bncWatcher/Dockerfile
      context: .
    image: bnc-watcher
    environment:
      <<: *common-environment
      PROXY_URL: http://proxy:8001
      REDIS_HOST: redis
      HOME_RPC_URL:
      HOME_BRIDGE_ADDRESS:
      FOREIGN_URL:
      FOREIGN_ASSET:
      FOREIGN_FETCH_MAX_TIME_INTERVAL:
      FOREIGN_FETCH_INTERVAL:
      FOREIGN_FETCH_BLOCK_TIME_OFFSET:
    networks:
      - oracle_network
  side-watcher:
    build:
      dockerfile: sideWatcher/Dockerfile
      context: .
    image: side-watcher
    environment:
      <<: *common-environment
      HOME_SENDER_URL: http://home-sender:8001
      REDIS_HOST: redis
      HOME_RPC_URL:
      HOME_BRIDGE_ADDRESS:
      SIDE_RPC_URL:
      SIDE_START_BLOCK:
      SIDE_MAX_FETCH_RANGE_SIZE:
      SIDE_SHARED_DB_ADDRESS:
      VALIDATOR_PRIVATE_KEY:
    networks:
      - oracle_network
  home-sender:
    build:
      dockerfile: ethSender/Dockerfile
      context: .
    image: sender
    environment:
      <<: *common-environment
      RPC_URL: ${HOME_RPC_URL}
      TO_ADDRESS: ${HOME_BRIDGE_ADDRESS}
      GAS_LIMIT_FACTOR: ${HOME_GAS_LIMIT_FACTOR}
      MAX_GAS_LIMIT: ${HOME_MAX_GAS_LIMIT}
      QUEUE_NAME: homeSendQueue
      VALIDATOR_PRIVATE_KEY:
    networks:
      - oracle_network
  side-sender:
    build:
      dockerfile: ethSender/Dockerfile
      context: .
    image: sender
    environment:
      <<: *common-environment
      RPC_URL: ${SIDE_RPC_URL}
      TO_ADDRESS: ${SIDE_SHARED_DB_ADDRESS}
      GAS_LIMIT_FACTOR: ${SIDE_GAS_LIMIT_FACTOR}
      MAX_GAS_LIMIT: ${SIDE_MAX_GAS_LIMIT}
      QUEUE_NAME: sideSendQueue
      VALIDATOR_PRIVATE_KEY:
    networks:
      - oracle_network
networks:
  oracle_network:
